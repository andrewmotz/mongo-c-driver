load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//:__subpackages__"])

exports_files(["mongoc-config.h.in", "mongoc-version.h.in"])

_defines = [
    "MONGOC_COMPILATION",
    "MONGOC_NO_AUTOMATIC_GLOBALS=1",
]

_ssl_defines = [
    "MONGOC_HAVE_ASN1_STRING_GET0_DATA=1",
    "MONGOC_ENABLE_SSL=1",
    "MONGOC_ENABLE_SSL_OPENSSL=1",
    "MONGOC_ENABLE_CRYPTO=1",
    "MONGOC_ENABLE_CRYPTO_LIBCRYPTO=1",
]

write_file(
    name = "mongoc_config",
    out = "mongoc-config.h",
    content = [
        "#pragma once",
        "",
        "// Generated by bazel. Configuration options are done by bazel with",
        "// constraint_setting. See @bazelregistry_mongo_c_drive//:ssl for",
        "// example.",
        "",
        "#define MONGOC_USER_SET_CFLAGS \"\"",
        "#define MONGOC_USER_SET_LDFLAGS \"\"",
        "#define MONGOC_CC \"\"",
        "#define MONGOC_SOCKET_ARG2 struct sockaddr",
        "#define MONGOC_SOCKET_ARG3 int",
    ],
)

cc_library(
    name = "mongoc",
    hdrs = glob(["*.h"]) + [":mongoc_config"],
    srcs = glob(["*.c", "*.h", "*.inl"]) + [":mongoc_config"],
    strip_include_prefix = ".",
    include_prefix = "mongoc",
    includes = ["."],
    defines = _defines + _ssl_defines
      + select({
        "@platforms//os:windows": ["MONGOC_HAVE_DNSAPI=1"],
        "//conditions:default": [
            "MONGOC_HAVE_RES_NSEARCH=1",
            "MONGOC_HAVE_RES_NCLOSE=1",
            "MONGOC_HAVE_RES_SEARCH=1",
        ],
    }),
    deps = [
        "//src/libbson/src/bson",
        "@boringssl//:ssl"],
    copts = select({
        "@bazel_tools//tools/cpp:msvc": ["/w"],
        "//conditions:default": ["-w"],
    }),
    linkopts = select({
        "@platforms//os:windows": ["-DEFAULTLIB:Advapi32", "-DEFAULTLIB:Dnsapi"],
        "//conditions:default": ["-lresolv"],
    }),
)
